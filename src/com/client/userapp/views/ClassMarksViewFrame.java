/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.client.userapp.views;

import com.client.service.Clazz;
import com.client.service.Score;
import com.client.service.Student;
import com.client.service.Subject;
import com.client.userapp.Application;
import com.client.userapp.constants.WebMethods;
import com.client.userapp.constants.WindowUtility;
import com.client.userapp.dto.StudentDTO;
import com.client.userapp.dto.SubjectDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HuongUD
 */
public class ClassMarksViewFrame extends javax.swing.JPanel {

    private DefaultTableModel mTblScore;
    private DefaultComboBoxModel mCbo;
    private Clazz clazz;
    private Subject sub;
    private int maxCo = 0;

    /**
     * Creates new form ClassMarksViewFrame
     */
    public ClassMarksViewFrame(Clazz clazz) {
        this.clazz = clazz;
        initComponents();
        btnDetail.setEnabled(false);
        btnFind.setEnabled(false);
        maxCo = Integer.parseInt(Application.PROP.get("max_coeff").toString());
        initTable();
        initCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFind = new javax.swing.JButton();
        btnDetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblScore = new javax.swing.JTable();
        lblMonHoc2 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();

        btnFind.setText("Tìm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDetail.setText("Chi tiết");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        tblScore.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MS", "Họ tên", "Hệ số 1", "Hệ số 2", "Hệ số 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblScore.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblScore.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblScore.getTableHeader().setReorderingAllowed(false);
        tblScore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblScoreMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblScore);

        lblMonHoc2.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        lblMonHoc2.setText("Môn học");

        cboSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDetail))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMonHoc2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMonHoc2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDetail)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFind)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblScoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblScoreMouseClicked
        // TODO add your handling code here:
        if (tblScore.getSelectedRow() >= 0) {
            btnDetail.setEnabled(true);
        }
    }//GEN-LAST:event_tblScoreMouseClicked

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        btnDetail.setEnabled(false);
        new Thread(() -> {
            LoadingScreen load = new LoadingScreen("Đang tải...");
            load.setVisible(true);
            btnFind.setEnabled(false);
            btnFind.setText("...");
            mTblScore.setRowCount(0);

            List<StudentDTO> student = StudentDTO.getStudentDTOList(WebMethods.getStudentsByClass(clazz));
            String[] marks;
            ArrayList<String> ctx;
            List<Score> score;
            for (StudentDTO s : student) {
                marks = new String[maxCo];
                ctx = new ArrayList<>();
                ctx.add(s.getId() + "");
                ctx.add(s.getName());

                score = WebMethods.getScoresByStudentAndSubject(s.toStudent(), sub);
                for (int i = 0; i < marks.length; i++) {
                    marks[i] = " ";
                }
                for (Score sc : score) {
                    if (marks[sc.getCoefficient()-1]==null) {
                        marks[sc.getCoefficient()-1] = " ";
                    }
                    marks[sc.getCoefficient() - 1] += sc.getScore() + " ; ";
                }
                for (String m : marks) {
                    if (!m.equals(" ")) {
                        ctx.add(m.substring(1, m.length()-3));
                    } else {
                        ctx.add("");
                    }
                }
                mTblScore.addRow(ctx.toArray());

                btnFind.setEnabled(true);
                btnFind.setText("Tìm");
            }
            load.dispose();
        }).start();
    }//GEN-LAST:event_btnFindActionPerformed

    private void cboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSubjectActionPerformed
        // TODO add your handling code here:
        try {
            sub = ((SubjectDTO) cboSubject.getSelectedItem()).toSubject();
            if (sub.getId() > 0) {
                btnFind.setEnabled(true);
            }
        } catch (Exception ex) {
            btnFind.setEnabled(false);
        }
    }//GEN-LAST:event_cboSubjectActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        // TODO add your handling code here:
        new Thread(() -> {
            btnDetail.setEnabled(false);
            LoadingScreen load = new LoadingScreen("Đang tải...");
            load.setVisible(true);

            int id = Integer.parseInt(
                    mTblScore.getValueAt(tblScore.getSelectedRow(), 0).toString()
            );
            Student stu = WebMethods.getStudentById(id);

            WindowUtility.showModalDialog(null, "Chi tiết điểm học sinh", new StudentMarksScreen(stu, sub));

            load.dispose();
            btnDetail.setEnabled(true);
        }).start();
    }//GEN-LAST:event_btnDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnFind;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMonHoc2;
    private javax.swing.JTable tblScore;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        mTblScore = (DefaultTableModel) tblScore.getModel();
        mTblScore.setColumnCount(2);
        int max = Integer.parseInt(Application.PROP.get("max_coeff").toString());
        for (int i = 1; i <= max; i++) {
            mTblScore.addColumn("Hệ số " + i);
        }
        mTblScore.setRowCount(0);
    }

    private void initCombo() {
        List<SubjectDTO> subjects = SubjectDTO.getSubjectDTOList();
        Subject s = new Subject();
        s.setId(0);
        s.setName("-- Chọn môn học --");
        subjects.add(0, new SubjectDTO(s));
        mCbo = new DefaultComboBoxModel(subjects.toArray());
        cboSubject.setModel(mCbo);
    }
}
