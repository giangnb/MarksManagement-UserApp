/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.client.userapp.views;

import com.client.userapp.constants.WindowSize;
import com.client.service.Clazz;
import com.client.service.Subject;
import com.client.userapp.Application;
import com.client.userapp.constants.ConfirmOption;
import com.client.userapp.constants.WebMethods;
import com.client.userapp.constants.WindowUtility;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import java.util.concurrent.Callable;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Giang
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        setIconImage(Application.ICON);
        initContext();
        setSize(WindowSize.WIDE_WINDOW.getDimension());
        setMinimumSize(WindowSize.TINY_WINDOW.getDimension());
        setLocationRelativeTo(null);
        setViewPort(new WelcomeFrame());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        scrViewPort = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniAddScores = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuSubjects = new javax.swing.JMenu();
        mnuClasses = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mnuHeadClass = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mniUserInfo = new javax.swing.JMenuItem();
        mniAccount = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniLogout = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mniUserManual = new javax.swing.JMenuItem();
        mniSupport = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mniAbout = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý điểm");

        pnlViewPort.setLayout(new java.awt.CardLayout());
        scrViewPort.setViewportView(pnlViewPort);

        jMenu1.setText("Quản lý điểm");

        mniAddScores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mniAddScores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/marking.png"))); // NOI18N
        mniAddScores.setText("Xem điểm");
        mniAddScores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddScoresActionPerformed(evt);
            }
        });
        jMenu1.add(mniAddScores);
        jMenu1.add(jSeparator1);

        mnuSubjects.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/subject.png"))); // NOI18N
        mnuSubjects.setText("Môn học");
        jMenu1.add(mnuSubjects);

        mnuClasses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/class.png"))); // NOI18N
        mnuClasses.setText("Lớp học");
        jMenu1.add(mnuClasses);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cá nhân");

        mnuHeadClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/class.png"))); // NOI18N
        mnuHeadClass.setText("Lớp chủ nhiệm");
        jMenu2.add(mnuHeadClass);
        jMenu2.add(jSeparator2);

        mniUserInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/user.png"))); // NOI18N
        mniUserInfo.setText("Thông tin cá nhân");
        mniUserInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUserInfoActionPerformed(evt);
            }
        });
        jMenu2.add(mniUserInfo);

        mniAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/lock.png"))); // NOI18N
        mniAccount.setText("Tài khoản");
        mniAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAccountActionPerformed(evt);
            }
        });
        jMenu2.add(mniAccount);
        jMenu2.add(jSeparator3);

        mniLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mniLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/logout.png"))); // NOI18N
        mniLogout.setText("Đăng xuất");
        mniLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLogoutActionPerformed(evt);
            }
        });
        jMenu2.add(mniLogout);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Trợ giúp");

        mniUserManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/howto.png"))); // NOI18N
        mniUserManual.setText("Hướng dẫn sử dụng");
        mniUserManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUserManualActionPerformed(evt);
            }
        });
        jMenu3.add(mniUserManual);

        mniSupport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/recover.png"))); // NOI18N
        mniSupport.setText("Hỗ trợ kỹ thuật");
        mniSupport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSupportActionPerformed(evt);
            }
        });
        jMenu3.add(mniSupport);
        jMenu3.add(jSeparator4);

        mniAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/userapp/images/info.png"))); // NOI18N
        mniAbout.setText("Giới thiệu");
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        jMenu3.add(mniAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrViewPort, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrViewPort, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed
        // TODO add your handling code here:
        setViewPort(new AboutFrame());
    }//GEN-LAST:event_mniAboutActionPerformed

    private void mniSupportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSupportActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(
                this,
                "Liên hệ hỗ trợ:\n\nKỹ thuật\n"
                + Application.PROP.get("admin_contact")
                + "\n\nQuản lý\n"
                + Application.PROP.get("manager_contact"),
                "Hỗ trợ",
                JOptionPane.DEFAULT_OPTION);
    }//GEN-LAST:event_mniSupportActionPerformed

    private void mniLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLogoutActionPerformed
        // TODO add your handling code here:
        ConfirmOption conf = WindowUtility.showConfirm(this, "Đăng xuất", "Bạn chuẩn bị đăng xuất khỏi tài khoản.\nBạn chắc chắn không?");

        if (conf.equals(ConfirmOption.YES)) {
            Application.TEACHER = null;
            this.dispose();
            javax.swing.JFrame frm = new LoginScreen();
            frm.setVisible(true);
        }
    }//GEN-LAST:event_mniLogoutActionPerformed

    private void mniUserInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUserInfoActionPerformed
        // TODO add your handling code here:
        setViewPort(new UserInfoFrame());
    }//GEN-LAST:event_mniUserInfoActionPerformed

    private void mniAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAccountActionPerformed
        // TODO add your handling code here:
        setViewPort(new UserAccountFrame());
    }//GEN-LAST:event_mniAccountActionPerformed

    private void mniAddScoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddScoresActionPerformed
        // TODO add your handling code here:
        new Thread(() -> {
            setViewPort(new MarksViewFrame());
        }).start();
    }//GEN-LAST:event_mniAddScoresActionPerformed

    private void mniUserManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUserManualActionPerformed
        // TODO add your handling code here:
        String content="";
        File f = new File("UserManual.html");
        try {
            content = new String(Files.readAllBytes(f.toPath()));
        } catch (IOException ex) {
            // ignore
        }
        
        JDialog dia = new JDialog(this, "Hướng dẫn sử dụng", true);
        JLabel lblHelp = new JLabel(content);
        JScrollPane scrHelp = new JScrollPane(lblHelp);
        dia.setLayout(new CardLayout());
        dia.getContentPane().add(scrHelp);
        dia.setSize(WindowSize.SMALL_WINDOW.getDimension());
        dia.setLocationRelativeTo(this);
        dia.setVisible(true);
    }//GEN-LAST:event_mniUserManualActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniAccount;
    private javax.swing.JMenuItem mniAddScores;
    private javax.swing.JMenuItem mniLogout;
    private javax.swing.JMenuItem mniSupport;
    private javax.swing.JMenuItem mniUserInfo;
    private javax.swing.JMenuItem mniUserManual;
    private javax.swing.JMenu mnuClasses;
    private javax.swing.JMenu mnuHeadClass;
    private javax.swing.JMenu mnuSubjects;
    static final javax.swing.JPanel pnlViewPort = new javax.swing.JPanel();
    private javax.swing.JScrollPane scrViewPort;
    // End of variables declaration//GEN-END:variables

    private void initContext() {
        JMenuItem mni;
        // Title bar & Windows
        if (Application.TEACHER != null) {
            setTitle(getTitle() + " - [" + Application.TEACHER.getName() + "]");
        }
        setLocationRelativeTo(null);

        // Classes list 
        List<Clazz> classes = WebMethods.getClasses();
        if (classes.size() <= 0) {
            mnuClasses.setEnabled(false);
        } else {
            for (Clazz c : classes) {
                if (c.getId()>1) { // Exclude archive class
                    mni = new JMenuItem(c.getName());
                    mni.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            mniClassActionPerformed(e, c);
                        }
                    });
                    mnuClasses.add(mni);
                }
            }
        }

        // Subjects list
        List<Subject> subs = WebMethods.getSubjects();
        if (subs.size() <= 0) {
            mnuSubjects.setEnabled(false);
        } else {
            for (Subject sub : subs) {
                mni = new JMenuItem(sub.getName());
                mni.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        mniSubActionPerformed(e, sub);
                    }
                });
                mnuSubjects.add(mni);
            }
        }
        
        // Head classes list
        List<Clazz> hcla = WebMethods.getClassesByTeacher(Application.TEACHER);
        if (hcla.size()<=0) {
            mnuHeadClass.setEnabled(false);
        } else {
            for (Clazz c : hcla) {
                mni = new JMenuItem(c.getName());
                mni.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        mniHeadClassActionPerformed(e, c);
                    }
                });
                mnuHeadClass.add(mni);
            }
        }
    }

    private Callable mniSubActionPerformed(ActionEvent evt, Subject s) {
        setViewPort(new MarksViewFrame(s));
        return null;
    }

    private Callable mniClassActionPerformed(ActionEvent evt, Clazz c) {
        setViewPort(new MarksViewFrame(c));
        return null;
    }

    private void mniHeadClassActionPerformed(ActionEvent evt, Clazz c) {
        ClassViewFrame.resetTabbedPane();
        setViewPort(new ClassViewFrame(c));
    }

    static void setViewPort(JPanel panel) {
        pnlViewPort.setVisible(false);
        pnlViewPort.removeAll();
        pnlViewPort.add(panel);
        pnlViewPort.repaint();
        pnlViewPort.revalidate();
        pnlViewPort.updateUI();
        pnlViewPort.setVisible(true);
    }
}
